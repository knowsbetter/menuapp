version: '3.8'

name: menu_app_image
services:
  my_web_app:
    build:
      dockerfile: Dockerfile
    restart: always
    container_name: menuapp-web
    volumes:
      - shared_volume:/menuapp/output
    ports:
      - 8000:8000
    env_file:
      - .docker.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      celery:
        condition: service_started
    command: uvicorn menuapp.main:app --host 0.0.0.0 --port 8000

  db:
    image: postgres:15.1-alpine
    container_name: menuapp-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 9000:5432
    env_file:
      - .docker.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 20

  redis:
    image: redis:latest
    container_name: menuapp-cache
    restart: always
    env_file:
      - .docker.env
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 6379
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  celery:
    build:
      dockerfile: celery.Dockerfile
    restart: always
    container_name: menuapp-celery-web
    env_file:
      - .docker.env
    volumes:
      - shared_volume:/transport/output
    expose:
      - 5672
    command: celery -A transport.main worker --loglevel=INFO --pool=solo
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:latest
    container_name: menuapp-rabbitmq
    env_file:
      - .docker.env
    expose:
      - 5672
      - 15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 10


volumes:
  postgres_data:
  shared_volume:
